import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';
import { getTodos, postTodo, putTodo, deleteTodo } from './api';

const initialState = {
  data: [],
  status: '',
};

export const fetchTodos = createAsyncThunk('todos/fetch', async () => {
  const response = await getTodos();
  return response;
});

export const addTodo = createAsyncThunk('todos/add', async () => {
  const response = await postTodo();
  return response;
});

export const updateTodo = createAsyncThunk('todos/update', async () => {
  const response = await putTodo();
  return response;
});

export const removeTodo = createAsyncThunk('todos/remove', async () => {
  const response = await deleteTodo();
  return response;
});

function isRejectedAction(action) {
  return action.type.endsWith('rejected');
}

function isPendingAction(action) {
  return action.type.endsWith('pending');
}

export const slice = createSlice({
  name: 'todos',
  initialState,
  reducers: {
    add: (state, action) => {
      state.data.push(action.payload);
    },
    remove: (state, action) => {
      state.data = state.data.filter((todo) => todo.id !== action.payload);
    },
    update: (state, action) => {
      const idx = state.data.findIndex((todo) => todo.id === action.payload.id);
      state.data[idx] = action.payload;
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(fetchTodos.fulfilled, (state, action) => {
        state.status = 'idle';
      })
      .addCase(postTodo.fulfilled, (state, action) => {
        state.status = 'idle';
      })
      .addCase(putTodo.fulfilled, (state, action) => {
        state.status = 'idle';
      })
      .addCase(deleteTodo.fulfilled, (state, action) => {
        state.status = 'idle';
      })
      .addMatcher(isRejectedAction, (state, action) => {})
      .addMatcher(isPendingAction, (state, action) => {
        state.status = 'pending';
      });
  },
});

export const { add, remove, update } = slice.actions;

export default slice.reducer;
